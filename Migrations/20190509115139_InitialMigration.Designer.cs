// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ca.abcmufflerandhitch.Data;

namespace ca.abcmufflerandhitch.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20190509115139_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .IsRequired();

                    b.HasKey("BrandID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandID");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<bool>("InStock");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductDescription")
                        .IsRequired();

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<int>("ProductTypeID");

                    b.Property<string>("VehicleModel");

                    b.HasKey("ProductID");

                    b.HasIndex("BrandID");

                    b.HasIndex("ProductTypeID");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<string>("ProductTypeName")
                        .IsRequired();

                    b.HasKey("ProductTypeID");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Products.Accessory", b =>
                {
                    b.HasBaseType("ca.abcmufflerandhitch.Models.Product");

                    b.HasDiscriminator().HasValue("Accessory");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Products.Electrical", b =>
                {
                    b.HasBaseType("ca.abcmufflerandhitch.Models.Product");

                    b.Property<float>("EstInstallTime");

                    b.Property<int>("MaxTrailerAxles");

                    b.HasDiscriminator().HasValue("Electrical");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Products.Exhaust", b =>
                {
                    b.HasBaseType("ca.abcmufflerandhitch.Models.Product");

                    b.Property<float?>("DegreeBend");

                    b.Property<float?>("DiameterInches");

                    b.Property<string>("Material");

                    b.HasDiscriminator().HasValue("Exhaust");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Products.Hitch", b =>
                {
                    b.HasBaseType("ca.abcmufflerandhitch.Models.Product");

                    b.Property<int>("HitchClass");

                    b.Property<int>("WeightRatingPounds");

                    b.HasDiscriminator().HasValue("Hitch");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Products.Suspension", b =>
                {
                    b.HasBaseType("ca.abcmufflerandhitch.Models.Product");

                    b.Property<int>("WeightRatingPounds")
                        .HasColumnName("Suspension_WeightRatingPounds");

                    b.HasDiscriminator().HasValue("Suspension");
                });

            modelBuilder.Entity("ca.abcmufflerandhitch.Models.Product", b =>
                {
                    b.HasOne("ca.abcmufflerandhitch.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ca.abcmufflerandhitch.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
